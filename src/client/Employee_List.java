package client;


import interfaces_object.Employee;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

public class Employee_List extends JFrame {
    private client_rmi clientController;
    private ArrayList<Employee> employee = new client_rmi().selectAllEmployee();

    /**
     * Creates new form List_Employee
     */
    public Employee_List() {
        initComponents();
        clientController = new client_rmi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new JScrollPane();
        jTable2 = new JTable();
        jButton2 = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new Dimension(700, 400));



        jButton2.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setBackground(new Color(7, 62, 107, 178));
        jButton2.setForeground(new Color(204, 204, 204));
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        defaultTableModel = new DefaultTableModel();
        jTable2.setModel(defaultTableModel);
        jTable2.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                tblBookMouseClicked(evt);
            }
        });
        defaultTableModel.addColumn("STT");
        defaultTableModel.addColumn("Name");
        defaultTableModel.addColumn("Address");
        defaultTableModel.addColumn("Age");

        int i = 1;
        for (Employee employees : employee) {
            defaultTableModel.addRow(new Object[] {
                    i++,
                    employees.getName(),
                    employees.getAddress(),
                    employees.getAge(),
            });
        }
        TableColumnModel columnModel = jTable2.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(20);
        columnModel.getColumn(1).setPreferredWidth(100);
        columnModel.getColumn(2).setPreferredWidth(140);
        columnModel.getColumn(3).setPreferredWidth(50);
        jTable2.setRowHeight(30);
        jTable2.setFont(new Font("Tahoma", 0, 16));
        jScrollPane2.setViewportView(jTable2);
        jScrollPane2.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
        jScrollPane2.getViewport().setBackground(Color.WHITE);
        jScrollPane2.getVerticalScrollBar().setPreferredSize(new Dimension(0, 0));


        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 115, GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        this.setPreferredSize(new Dimension(700, 300));
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        pack();
        this.setLocationRelativeTo(null);
        this.setTitle("Employee List");
    }
    public void jButton1ActionPerformed(java.awt.event.ActionEvent evt, String nameBook) {
        ArrayList<Employee> employees = new client_rmi().selectAllEmployee();
        // update Table
        defaultTableModel.getDataVector().removeAllElements();
        int i = 1;
        for(Employee e : employees){
            defaultTableModel.addRow(new Object[] {
                    i++,
                    e.getName(),
                    e.getAddress(),
                    e.getAge(),
            });
        }
    }

    private void tblBookMouseClicked(MouseEvent evt){
        int row = jTable2.getSelectedRow();
        Employee employee = new client_rmi().selectAllEmployee().get(row);
        new Employee_Info(clientController ,employee, this).setVisible(true);
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        new Employee_Add(this).setVisible(true);
    }

    private JButton jButton2;
    private JScrollPane jScrollPane2;
    private DefaultTableModel defaultTableModel;
    private JTable jTable2;
}
